----------------------------------------------------------------

minesweeper와 studycafe 디렉토리가 있습니다.
안쪽에 asis와 tobe 디렉토리가 각각 존재하는데
둘 다 처음엔 같은 코드가 적힌 파일이 들어있습니다.

tobe에 리팩토링을 진행한 후 asis와 비교해보면 됨

----------------------------------------------------------------

우리가 클린 코드를 추구하는 이유

결론부터 이야기하자면 가독성 때문임
줄간격 맞추기나 스페이스로 코드를 잘 띄거나 그런 문제가 아닙니다.

여기서 말하는 코드가 잘 읽힌다는 건 이해가 잘 된다는 것임
이해가 잘되니까 당연히 유지보수가 수월할 것이고
결국은 우리의 시간과 자원이 절약할 수 있습니다.

가독성 좋은 코드가 결국 돈을 효율적으로 쓰게 해준다는 건 알겠는데
그럼 어떻게 해야하는지 알아야겠죠

세상엔 클린 코드에 대한 수많은 조언들이 있습니다.
이걸 그냥 따라하면 되는게 아니라
원칙과 조언을 적용하기 전에 왜 이 원칙이 나왔고 적용하면 좋은지를 알아야합니다.

그냥 따라치기만 하면 따라치기만 잘하는 사람이 될 뿐이구요.
이유를 알아야 응용 능력이 생겨서 앞으로 가독성이 좋은 클린 코드를 짤 수 있게 됩니다.

그럼 그 이유에 대해 알아보기 전에 하나 짚고 넘어갈게 있습니다.
수많은 클린 코드에 대한 조언을 살펴보면 빠짐없이 등장하는 개념이 있음
바로 추상인데
이게 무엇인지 왜 빠짐없이 등장하는지 보도록 합시다.

----------------------------------------------------------------

프로그램의 정의

데이터와 코드의 조합이라고 정의하겠습니다.
데이터는 식재료 코드는 요리 방법임

모든것을 무너뜨리고 그냥 프로그램이라는 대상을 바라보면
인식되는것은 뭔가 패턴이 있다는 것과 그 패턴의 재료가 되는 것들이 있다는 것인데
여기서의 패턴을 코드라고 하고 재료를 데이터라고 보면 됨

아무튼 이 데이터와 코드의 조합이라는 정의대로 표현해보고 개념으로 확장해봅시다.
데이터를 가지고 추상에 대해 이야기 할거고
코드를 가지고 논리에 대해서 이야기 해볼것임

----------------------------------------------------------------

추상과 구체

